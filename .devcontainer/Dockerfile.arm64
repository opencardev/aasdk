FROM debian:bookworm

# Install architecture-specific packages
ARG TARGET_ARCH=arm64
ENV TARGET_ARCH=${TARGET_ARCH}

# Install common dependencies and build tools
RUN apt-get update && export DEBIAN_FRONTEND=noninteractive \
    && apt-get -y install --no-install-recommends \
        build-essential \
        cmake \
        git \
        wget \
        curl \
        pkg-config \
        ca-certificates \
        protobuf-compiler \
        libprotobuf-dev \
        libusb-1.0-0-dev \
        libssl-dev

# Install cross-compilation toolchain for ARM64
RUN apt-get -y install --no-install-recommends \
        gcc-aarch64-linux-gnu \
        g++-aarch64-linux-gnu \
        libc6-dev-arm64-cross

# Install boost libraries
RUN apt-get -y install --no-install-recommends \
        libboost-dev \
        libboost-system-dev \
        libboost-filesystem-dev \
        libboost-thread-dev \
        libboost-date-time-dev \
        libboost-atomic-dev \
        libboost-chrono-dev \
        libboost-regex-dev \
        libboost-log-dev

# Clean up
RUN apt-get autoremove -y && apt-get clean -y && rm -rf /var/lib/apt/lists/*

# Create a non-root user
ARG USERNAME=vscode
ARG USER_UID=1000
ARG USER_GID=$USER_UID

RUN groupadd --gid $USER_GID $USERNAME \
    && useradd --uid $USER_UID --gid $USER_GID -m $USERNAME \
    && apt-get update \
    && apt-get install -y sudo \
    && echo $USERNAME ALL=\(root\) NOPASSWD:ALL > /etc/sudoers.d/$USERNAME \
    && chmod 0440 /etc/sudoers.d/$USERNAME \
    && apt-get clean -y && rm -rf /var/lib/apt/lists/*

# Set the default shell to bash rather than sh
ENV SHELL=/bin/bash

# Set cross-compilation environment variables
ENV CC=aarch64-linux-gnu-gcc
ENV CXX=aarch64-linux-gnu-g++
ENV AR=aarch64-linux-gnu-ar
ENV STRIP=aarch64-linux-gnu-strip

# Create workspace directory and set ownership
RUN mkdir -p /workspace && chown $USERNAME:$USERNAME /workspace

WORKDIR /workspace
